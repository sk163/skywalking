/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

pipeline {
    agent {
        label 'skywalking'
    }

    options {
        timestamps()
        timeout(time: 5, unit: 'HOURS')
        parallelsAlwaysFailFast()
    }

    tools {
        jdk 'JDK 1.8 (latest)'
    }

    environment {
        BUILD_NO="wl4_${BUILD_ID}"
        MAVEN_OPTS = '-Dmaven.repo.local=.m2/repository -XX:+TieredCompilation -XX:TieredStopAtLevel=1 -XX:+CMSClassUnloadingEnabled -XX:+UseConcMarkSweepGC -XX:-UseGCOverheadLimit -Xmx3g'
    }

    stages {
        stage('Checkout Source Code') {
            steps {
                sh 'bash ./test/plugin/script/systeminfo.sh'
                deleteDir()
                checkout scm
                sh 'git submodule update --init'
            }
        }

        stage('Compile agent Codes') {
            when {
                expression {
                    return sh(returnStatus: true, script: 'bash tools/ci/agent-build-condition.sh')
                }
            }
            steps {
                sh './mvnw -Pagent clean package -DskipTests'
            }
        }

        stage('Compile plugin-test tools Codes') {
            when {
                expression {
                    return sh(returnStatus: true, script: 'bash tools/ci/agent-build-condition.sh')
                }
            }
            steps {
                sh './mvnw -f test/plugin/pom.xml clean package -DskipTests docker:build'
            }
        }

        stage('Test Cases Report (135)') {
            steps {
                echo "Test Cases Report"
            }
        }

        stage('Run Agent Plugin Tests') {
            when {
                expression {
                    return sh(returnStatus: true, script: 'bash tools/ci/agent-build-condition.sh')
                }
            }

            parallel {
                stage('Group1') {
                    stages {
                        stage('kafka 0.11.0.0-2.3.0 (16)') {
                            steps {
                                sh 'bash test/plugin/run.sh kafka-scenario'
                            }
                        }

                        stage('ehcache 2.8.x-2.10.x (19)') {
                            steps {
                                sh 'bash test/plugin/run.sh ehcache-2.x-scenario'
                            }
                        }

                        stage('undertow 1.3.0-2.0.27 (23)') {
                            steps {
                                sh 'bash test/plugin/run.sh undertow-scenario'
                            }
                        }
                    }
                }
                
                stage('Group2') {
                    stages {
                        stage('spring-webflux 2.x (18)') {
                            steps {
                                sh 'bash test/plugin/run.sh webflux-scenario'
                            }
                        }

                        stage('spring 4.1.x-4.2.x (20)') {
                            steps {
                                sh 'bash test/plugin/run.sh spring-4.1.x-scenario'
                            }
                        }

                        stage('solrj 7.x (12)') {
                            steps {
                                sh 'bash test/plugin/run.sh solrj-7.x-scenario'
                            }
                        }

                        stage('httpclient 4.3.x-4.5.x (14)') {
                            steps {
                                sh 'bash test/plugin/run.sh httpclient-4.3.x-scenario'
                            }
                        }

                        stage('httpasyncclient 4.0-4.1.3 (7)') {
                            steps {
                                sh 'bash test/plugin/run.sh httpasyncclient-scenario'
                            }
                        }
                    }
                }
            }
        }
    }

    post {
        cleanup {
            sh 'bash test/plugin/run.sh --cleanup'
            deleteDir()
        }
    }
}
